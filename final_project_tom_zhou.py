# -*- coding: utf-8 -*-
"""Final Project_Tom Zhou.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15w8JQLuAjIrpSuyFJLmG9ACWN9Ln4R5x

# **Analyzing U.S. Reddit Discussions on Whether FPS Games Lead to Violent Tendencies in Adolescents**

## **Introduction**

The relationship between video games and youth behavior has been a topic of significant debate, particularly with the rise of first-person shooter (FPS) games. FPS games often depict intense combat scenarios, leading some to question their potential influence on adolescent aggression and violent tendencies. Social platforms like Reddit, where gaming culture thrives alongside broader societal discussions, offer a unique opportunity to explore public perceptions of this contentious issue.

This study focuses on U.S. Reddit communities to examine how users perceive the relationship between FPS games and violent tendencies in adolescents. By analyzing recent posts and comments from relevant subreddits, this research aims to uncover prevailing attitudes, identify key arguments for and against the claimed influence, and explore how external factors like public events or media narratives shape these discussions.

### Research Questions

1. What are the prevailing attitudes among U.S. Reddit users about the relationship between FPS games and adolescent aggression?  
2. How do perspectives differ between gaming communities, parents, educators, and other groups?  
3. What recurring themes or concerns dominate discussions about FPS games and adolescent behavior?  
4. How do emotional tones and thematic focuses vary across community-specific discussions?

### Literature Review

Research on the relationship between video games and adolescent behavior highlights mixed findings. Anderson and Bushman (2001) argue that violent video games can desensitize players and increase aggression, while Ferguson and Colwell (2020) find minimal evidence linking gaming to real-world violence. Studies like Gentile et al. (2004) emphasize potential risks for adolescents, such as increased aggression and reduced empathy, but these findings are often critiqued for neglecting external factors like family environment and socioeconomic conditions. For this project, Reddit is chosen as a platform to contextualize these academic debates, leveraging its diverse user base and rich community discussions to analyze societal perceptions of FPS games' impact.

The following articles as our data sources:

1. Anderson, C. A., & Bushman, B. J. (2001). *Effects of violent video games on aggressive behavior.* Psychological Science.  
2. Ferguson, C. J., & Colwell, J. (2020). *Understanding why video games do not cause aggression.* Journal of Adolescent Research.  
3. Gentile, D. A., et al. (2004). *The effects of video game habits on adolescent aggression.* Journal of Applied Developmental Psychology.  
4. Relevant Reddit discussions as collected via PRAW API from subreddits including `r/gaming`, `r/Parenting`, and `r/teenagers`.

### Hypothesis

This project hypothesizes that most U.S.-based Reddit users, particularly within gaming communities, reject the notion that FPS games directly contribute to violent tendencies in adolescents. However, it anticipates polarized discussions, with advocacy groups, educators, and parents expressing contrasting concerns, potentially driven by broader societal narratives.

### Importance

This research is significant because it transcends technical analysis and focuses on using Python-based tools to address a pressing societal issue: the role of digital media in shaping youth behavior. Video games are a central part of modern culture, especially for adolescents, yet their impact remains controversial. By analyzing Reddit discussions, this project contributes to understanding how public sentiment evolves, where societal concerns lie, and how different stakeholder groups engage with such debates.

The findings can inform social policy and awareness campaigns. For instance, they may guide policymakers in balancing the regulation of gaming content with the promotion of healthy gaming practices. Additionally, parents and educators can benefit from insights into how others view gaming's impact on youth behavior, empowering them to make informed decisions. This project thus bridges the gap between technological tools and their application in addressing real-world societal challenges, exemplifying how Python-based data analysis can serve as a means to explore and respond to critical social phenomena.

## **Methods**

### Data Collection

The data for this study was collected from Reddit, a platform that hosts diverse discussions across various communities, using the Python Reddit API Wrapper (PRAW). Reddit was chosen because of its active user base, particularly in communities related to gaming, parenting, and youth culture, making it an ideal source for examining societal perceptions of FPS games. The data collection process followed these steps:

1. Subreddit Selection:  
   Four subreddits were chosen to capture a range of perspectives:

   - `r/gaming` for insights from gaming enthusiasts.

   - `r/teenagers` to represent adolescent perspectives.

   - `r/parenting` for parental concerns.

   - `r/askReddit` to gather broad societal opinions.  

2. Time Frame:  
   Data was limited to posts and comments from the past two years (2022–2024) to ensure that findings reflect current trends and attitudes.

3. Keyword Filtering:  
   Keywords such as “FPS games,” “video game violence,” “adolescent aggression,” and “media influence” were used to identify posts and comments relevant to the research questions.

4. Post and Comment Selection Criteria:  
   Only high-engagement posts and comments, such as those with high karma scores or substantial comment activity, were included to ensure data quality and relevance.

### Data Cleaning

Once the data was collected, it underwent a series of preprocessing steps to prepare it for analysis:

1. Removing Irrelevant Entries:  
   Posts and comments that were empty, system-generated, or irrelevant to the topic were excluded.

2. Standardizing Text:  
   The text data was converted to lowercase, and unnecessary elements such as special characters, URLs, and stop words were removed to enhance the accuracy of text-based analyses.

3. De-duplication:  
   Duplicate entries, such as reposted content, were identified and removed to prevent overrepresentation in the analysis.

### Data Analysis

Two analytical methods were employed to address the research questions:

1. **Sentiment Comparison Across Subreddits**:
   This method aimed to evaluate and compare the emotional tone of discussions across different subreddits. By categorizing posts and comments as positive, negative, or neutral using VADER (Valence Aware Dictionary and sEntiment Reasoner), this analysis highlighted variations in user attitudes among gaming, parenting, and other communities. The results provided insights into how sentiment differs based on community context.

2. **Word Frequency Analysis**:
   To identify the dominant topics and recurring concerns in discussions, a word frequency analysis was conducted. This method involved extracting and visualizing the most frequently used keywords within the text. By using bar charts and word clouds, the analysis revealed the primary arguments and key themes in Reddit discussions about FPS games and adolescent aggression.

These methods offered complementary perspectives: sentiment analysis provided insights into the emotional tone and community differences, while word frequency analysis revealed the thematic focus and core topics discussed across subreddits. Together, they facilitated a nuanced understanding of how Reddit users perceive the relationship between FPS games and adolescent behavior.

## **Steps of Analysis**

### 1. Data Collection

In this section, I collected Reddit posts and comments using the Python Reddit API Wrapper (PRAW). The data includes subreddits relevant to the research question, such as `r/gaming`, `r/teenagers`, `r/Parenting`, and `r/AskReddit`. The collected data consists of the following fields:
- **Subreddit**: The name of the subreddit from which the data was collected.
- **Title**: The title of each post.
- **Selftext**: The body text of the post.
- **Comments**: A list of top-level comments on the post.
- **Created UTC**: The timestamp of the post in UTC format.
- **Score**: The upvote score of the post.

The data collection process uses specific keywords to filter posts, such as "FPS games" and "video game violence." Posts with empty or very short text are excluded to ensure the quality of the dataset.
"""

!pip install praw

# Import necessary libraries
import praw
import pandas as pd
import matplotlib.pyplot as plt

reddit = praw.Reddit(
    client_id='33BpjN0dYD0lfBfH0mR9Ww',
    client_secret='WJU9iAECahM87gUZfrSQ8y4sEwQFIg',
    user_agent='windows:my_app:v1.0 (by /u/your_username)'
)

# Define subreddits and keywords for data collection
subreddits = ["gaming", "teenagers", "parenting", "askreddit"]
keywords = ["FPS games", "video game violence", "adolescent aggression", "media influence"]

# Initialize an empty list to store collected data
data = []

# Fetch posts from each subreddit based on keywords
for subreddit in subreddits:
    for keyword in keywords:
        try:
            for submission in reddit.subreddit(subreddit).search(keyword, limit=100):
                if submission.selftext and len(submission.selftext) > 50:  # Skip short or empty posts
                    data.append({
                        'subreddit': subreddit,  # Name of the subreddit
                        'title': str(submission.title) if submission.title else "",  # Post title
                        'selftext': str(submission.selftext) if submission.selftext else "",  # Post content
                        'comments': [str(comment.body) for comment in submission.comments[:10] if hasattr(comment, 'body')],  # Top-level comments
                        'created_utc': submission.created_utc,  # Post creation timestamp
                        'score': submission.score  # Post score
                    })
            print(f"Collected data from {subreddit} for keyword: {keyword}")
        except Exception as e:
            print(f"Error with {subreddit} and {keyword}: {e}")

# Convert the collected data into a DataFrame
df = pd.DataFrame(data)

# Display basic information about the dataset
print("\nDataset information:")
print(df.info())

# Visualize the number of posts collected per subreddit
subreddit_counts = df['subreddit'].value_counts()
plt.figure(figsize=(8, 6))
subreddit_counts.plot(kind='bar', color='skyblue')
plt.title('Number of Posts Collected per Subreddit')
plt.xlabel('Subreddit')
plt.ylabel('Number of Posts')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Display sample titles collected from the data
print("\nSample Titles:")
print(df['title'].head())

# Save raw data to a CSV file for further cleaning and analysis
df.to_csv("reddit_raw_data.csv", index=False, encoding='utf-8')
print("\nData saved to reddit_raw_data.csv.")

"""
### 2. Data Cleaning

In this section, the collected Reddit data is cleaned and prepared for analysis. The cleaning steps include:

- **Removing empty or duplicate entries**: Ensures only valid and unique posts are analyzed.
- **Standardizing text**: Converts all text to lowercase and removes unnecessary characters such as URLs, special symbols, and excessive whitespace.
- **Removing stopwords**: Common stopwords (e.g., "the", "and") are removed to enhance the quality of textual analysis.
- **Converting timestamps**: Transforms the `created_utc` field into a human-readable date format (e.g., `YYYY-MM-DD`).

These steps ensure the dataset is consistent and ready for downstream analysis, such as sentiment analysis and topic modeling."""

# Import necessary libraries
import pandas as pd
import re
from sklearn.feature_extraction.text import ENGLISH_STOP_WORDS

# Load the raw data saved from the Data Collection phase
df = pd.read_csv("reddit_raw_data.csv")

# Remove rows with empty 'selftext' or 'title' columns
df = df.dropna(subset=['selftext', 'title'])
print(f"\nNumber of rows after removing empty entries: {len(df)}")

# Remove duplicate rows based on 'title' and 'selftext'
df = df.drop_duplicates(subset=['title', 'selftext'])
print(f"Number of rows after removing duplicates: {len(df)}")

# Function to clean text by removing special characters, URLs, and converting to lowercase
def clean_text(text):
    text = text.lower()  # Convert text to lowercase
    text = re.sub(r'http\S+', '', text)  # Remove URLs
    text = re.sub(r'[^a-zA-Z\s]', '', text)  # Remove special characters
    text = re.sub(r'\s+', ' ', text)  # Remove extra spaces
    return text.strip()

# Apply the cleaning function to 'selftext' and 'title' columns
df['selftext'] = df['selftext'].astype(str).apply(clean_text)
df['title'] = df['title'].astype(str).apply(clean_text)

# Function to remove stopwords using sklearn's built-in stopwords list
def remove_stopwords_sklearn(text):
    words = text.split()  # Split text into words
    filtered_words = [word for word in words if word not in ENGLISH_STOP_WORDS]  # Remove stopwords
    return ' '.join(filtered_words)  # Join filtered words back into a string

# Apply the stopwords removal function to 'selftext' and 'title' columns
df['selftext'] = df['selftext'].apply(remove_stopwords_sklearn)
df['title'] = df['title'].apply(remove_stopwords_sklearn)

# Convert UTC timestamps to human-readable dates
df['created_date'] = pd.to_datetime(df['created_utc'], unit='s').dt.date

# Display sample of converted dates
print("\nSample of converted 'created_date':")
print(df[['created_utc', 'created_date']].head())

# Inspect column names
print("\nColumn names:")
print(df.columns)

# Display the first 5 rows of cleaned data
print("\nFirst 5 rows of cleaned data:")
print(df.head())

# Display basic statistics of the numeric columns
print("\nBasic statistics for numeric columns:")
print(df.describe())

# Sort values by score and display the top 5 highest scored posts
print("\nTop 5 posts by score:")
print(df[['title', 'score']].sort_values(by='score', ascending=False).head())

# Save the cleaned data to a new CSV file
df.to_csv("reddit_cleaned_data.csv", index=False)

"""### 3. Data Analysis

This section employs two analytical methods to examine Reddit discussions on FPS games and adolescent aggression:

1. **Sentiment Comparison Across Subreddits**:
   Leveraging VADER (Valence Aware Dictionary and sEntiment Reasoner), this method classifies posts and comments into positive, negative, or neutral sentiment. By aggregating these classifications at the subreddit level, it identifies emotional trends and sentiment variations across communities. Stacked bar charts are used to visualize differences, providing insights into how perspectives vary between gaming enthusiasts, parents, and broader societal groups.

2. **Word Frequency Analysis**:
   This method employs tokenization and frequency counting to extract the most frequently used keywords from the cleaned text. High-frequency words reveal dominant themes and recurring arguments within discussions. Visualizations such as word clouds and bar charts are used to highlight the thematic focus, offering a clear view of users’ primary concerns about FPS games and their perceived impact on adolescents.

These methods combine natural language processing (NLP) with data visualization, offering both emotional context and thematic insights to deepen the understanding of Reddit user perspectives.

#### 3.1 Sentiment Comparison Across Subreddits
"""

!pip install vaderSentiment

# Import the VADER Sentiment Analyzer
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer

# Initialize the VADER Sentiment Analyzer
analyzer = SentimentIntensityAnalyzer()

# Define a function to classify sentiment
def analyze_sentiment_vader(text):
    """
    Classifies the sentiment of a given text using VADER Sentiment Analyzer.
    Returns 'Positive', 'Negative', or 'Neutral' based on compound score.
    """
    sentiment_score = analyzer.polarity_scores(text)
    if sentiment_score['compound'] >= 0.05:
        return 'Positive'
    elif sentiment_score['compound'] <= -0.05:
        return 'Negative'
    else:
        return 'Neutral'

# Perform sentiment analysis on 'title' and 'selftext' columns
df['title_sentiment'] = df['title'].apply(analyze_sentiment_vader)  # Apply to post titles
df['selftext_sentiment'] = df['selftext'].apply(analyze_sentiment_vader)  # Apply to post content

# Aggregate sentiment counts by subreddit
subreddit_sentiments = df.groupby('subreddit')[['title_sentiment', 'selftext_sentiment']].apply(
    lambda x: pd.Series({
        'Positive': (x == 'Positive').sum().sum(),
        'Negative': (x == 'Negative').sum().sum(),
        'Neutral': (x == 'Neutral').sum().sum()
    })
).reset_index()

# Visualize sentiment comparison across subreddits
subreddit_sentiments.set_index('subreddit').plot(
    kind='bar',
    stacked=True,
    figsize=(12, 8),
    color=['lightgreen', 'lightcoral', 'lightblue'],
    edgecolor='black'
)
plt.title("Sentiment Comparison Across Subreddits", fontsize=16)
plt.xlabel("Subreddit", fontsize=14)
plt.ylabel("Number of Sentiments", fontsize=14)
plt.xticks(rotation=45, fontsize=12)
plt.legend(title="Sentiment", fontsize=12)
plt.tight_layout()
plt.show()

# Print aggregated sentiment data for reference
print("\nSentiment Analysis by Subreddit:")
print(subreddit_sentiments)

"""
#### 3.2 Word Frequency Analysis"""

# Import necessary libraries
from collections import Counter
from wordcloud import WordCloud
import matplotlib.pyplot as plt
from nltk.corpus import stopwords
import nltk

# Download NLTK stopwords if not already available
nltk.download('stopwords')

# Define stopwords using NLTK
stop_words = set(stopwords.words('english'))

# Combine 'title' and 'selftext' columns into a single text column for analysis
df['filtered_combined_text'] = (
    df['title'] + " " + df['selftext']
).apply(
    lambda x: " ".join([word for word in x.split() if word.lower() not in stop_words])
)

# Tokenize and count word frequencies
def tokenize_and_count(text_series):
    """
    Combines all text data into a single string, tokenizes it, and counts word frequencies.
    Returns a Counter object with word frequencies.
    """
    combined_text = " ".join(text_series)
    tokens = combined_text.split()
    word_freq = Counter(tokens)
    return word_freq

# Calculate word frequencies
word_frequencies = tokenize_and_count(df['filtered_combined_text'])

# Convert word frequencies to DataFrame for visualization
freq_df = pd.DataFrame(word_frequencies.items(), columns=['Word', 'Frequency']).sort_values(by='Frequency', ascending=False)

# Display top 20 most frequent words as a bar chart
top_words = freq_df.head(20)

plt.figure(figsize=(12, 6))
plt.bar(top_words['Word'], top_words['Frequency'], color='skyblue', edgecolor='black')
plt.title("Top 20 Most Frequent Words in Discussions", fontsize=16)
plt.xlabel("Words", fontsize=14)
plt.ylabel("Frequency", fontsize=14)
plt.xticks(rotation=45, fontsize=12)
plt.tight_layout()
plt.show()

# Generate a word cloud for all words
wordcloud = WordCloud(
    width=800, height=400,
    background_color='white',
    stopwords=stop_words,
    max_words=100
).generate_from_frequencies(word_frequencies)

plt.figure(figsize=(12, 6))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title("Word Cloud of Reddit Discussions", fontsize=16)
plt.show()

# Print the top 20 most frequent words for reference
print("\nTop 20 Most Frequent Words:")
print(top_words)

"""## **Key Findings**

### 1. What are the prevailing attitudes among U.S. Reddit users about the relationship between FPS games and adolescent aggression?

Sentiment Analysis revealed that gaming communities exhibited predominantly positive sentiments, emphasizing enjoyment and skill-building aspects of FPS games. Parenting communities, while largely positive (163 positive vs. 138 negative sentiments), also reflected significant concerns about the potential impact of FPS games on children. Teenagers' perspectives were more negative overall, with concerns about aggression and societal judgment.

### 2. How do perspectives differ between gaming communities, parents, educators, and other groups?

Gaming communities framed discussions around entertainment and strategy, while parenting communities highlighted developmental concerns, such as the influence of media on behavior. Teenagers displayed a mix of perspectives, balancing gaming enjoyment with apprehensions about its societal perception.

### 3. What recurring themes or concerns dominate discussions about FPS games and adolescent behavior?

Word Frequency Analysis identified terms like "violence," "media," and "social" as recurring topics, reflecting broader concerns about societal narratives and media influence on youth behavior.

### 4. How do emotional tones and thematic focuses vary across community-specific discussions?

Emotional tones varied significantly across communities: gaming discussions were largely celebratory and defensive, parenting discussions balanced optimism with caution, and teenage discussions leaned toward skepticism and concern. Thematic focuses also shifted accordingly, from gaming enjoyment to behavioral impacts and societal perceptions.

## **Conclusions & Implications**

The study's analysis confirms that Reddit discussions about FPS games and adolescent aggression are highly contextual and community-specific. While gaming communities champion FPS games as a form of entertainment and personal development, parenting and teenage communities reveal a more complex landscape of concerns and acceptance.

Critically, the results challenge the notion that FPS games universally contribute to violent tendencies in adolescents. Sentiment data indicates that while some users raise concerns, these are often tempered by counterarguments emphasizing social, cognitive, and entertainment benefits. Moreover, recurring themes like "media influence" and "societal narratives" suggest that external factors play a significant role in shaping public perceptions, rather than inherent attributes of the games themselves.

We can assert that public discourse on this topic is more reflective of broader societal anxieties about media consumption than direct evidence linking FPS games to aggression. However, the nuanced perspectives from parents and teenagers underscore the importance of fostering informed discussions that go beyond polarized views.

From a practical standpoint, these findings suggest actionable implications. Parents and educators can benefit from targeted awareness programs that clarify misconceptions and highlight constructive aspects of gaming. Policymakers should prioritize fostering balanced media narratives to avoid perpetuating unfounded fears while maintaining vigilance in monitoring content suitable for younger audiences. By bridging the gap between gaming culture and societal concerns, future initiatives can promote healthier gaming practices and a more informed public understanding of digital media's role in adolescent development.

## **Limitations and Future Directions**

#### Limitations
1. **Limited Dataset**:  
   The analysis relied on a relatively small sample size of 100 posts per subreddit, which may not fully capture the diversity of opinions on Reddit.

2. **Community Bias**:  
   The selected subreddits primarily reflect the views of gamers, parents, and teenagers, potentially excluding perspectives from educators or policymakers.

3. **Simplified Analysis Methods**:  
   Sentiment analysis and word frequency analysis provided broad trends but lacked the ability to capture nuanced context, such as sarcasm or cultural influences.

#### Future Directions
1. **Expanded Dataset**:  
   Future research can include a larger dataset across more subreddits or platforms to ensure broader representation and insights.

2. **Advanced NLP Techniques**:  
   Leveraging advanced natural language processing models like BERT could improve the analysis of context and sentiment accuracy.

3. **Cross-Platform Analysis**:  
   Comparing Reddit discussions with those on other platforms like Twitter or YouTube could validate findings and reveal platform-specific dynamics.
"""